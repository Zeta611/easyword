// Generated by ReScript, PLEASE EDIT WITH CARE

import * as Reactfire from "reactfire";
import * as Belt_Array from "../node_modules/rescript/lib/es6/belt_Array.js";
import * as Caml_option from "../node_modules/rescript/lib/es6/caml_option.js";
import * as JsxRuntime from "react/jsx-runtime";
import * as Firestore from "firebase/firestore";

function Translation$TranslationRow(props) {
  var translation = props.translation;
  return JsxRuntime.jsx("tr", {
              children: JsxRuntime.jsx("td", {
                    children: JsxRuntime.jsx("a", {
                          children: translation.korean,
                          href: "#" + translation.associated_comment + ""
                        })
                  })
            });
}

var TranslationRow = {
  make: Translation$TranslationRow
};

function Translation(props) {
  var firestore = Reactfire.useFirestore();
  var translationsCollection = Firestore.collection(firestore, "jargons/" + props.jargonID + "/translations");
  var match = Reactfire.useFirestoreCollectionData(Firestore.query(translationsCollection, Firestore.orderBy("korean", "asc")), {
        idField: "id"
      });
  var translations = match.data;
  if (match.status !== "success") {
    return null;
  }
  if (translations === undefined) {
    return null;
  }
  var translations$1 = Caml_option.valFromOption(translations);
  if (translations$1.length !== 0) {
    return JsxRuntime.jsx("div", {
                children: JsxRuntime.jsx("table", {
                      children: JsxRuntime.jsx("tbody", {
                            children: Belt_Array.map(translations$1, (function (translation) {
                                    return JsxRuntime.jsx(Translation$TranslationRow, {
                                                translation: translation
                                              }, translation.id);
                                  }))
                          }),
                      className: "table w-full"
                    }),
                className: "overflow-x-auto"
              });
  } else {
    return null;
  }
}

var make = Translation;

export {
  TranslationRow ,
  make ,
}
/* reactfire Not a pure module */
