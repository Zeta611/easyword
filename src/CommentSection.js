// Generated by ReScript, PLEASE EDIT WITH CARE

import * as $$Comment from "./Comment.js";
import * as CommentRow from "./CommentRow.js";
import * as Caml_option from "../node_modules/rescript/lib/es6/caml_option.js";
import * as Core__Option from "../node_modules/@rescript/core/src/Core__Option.js";
import * as JsxRuntime from "react/jsx-runtime";
import * as RescriptRelay_Fragment from "../node_modules/rescript-relay/src/RescriptRelay_Fragment.js";
import * as CommentSection_jargon_graphql from "./__generated__/CommentSection_jargon_graphql.js";

var convertFragment = CommentSection_jargon_graphql.Internal.convertFragment;

function use(fRef) {
  return RescriptRelay_Fragment.useFragment(CommentSection_jargon_graphql.node, convertFragment, fRef);
}

function useOpt(fRef) {
  return RescriptRelay_Fragment.useFragmentOpt(fRef !== undefined ? Caml_option.some(Caml_option.valFromOption(fRef)) : undefined, CommentSection_jargon_graphql.node, convertFragment);
}

var CommentFragment = {
  Types: undefined,
  Operation: undefined,
  convertFragment: convertFragment,
  use: use,
  useOpt: useOpt
};

function CommentSection(props) {
  var match = use(props.commentRefs);
  var roots = $$Comment.constructForest(match.comments_connection.edges.map(function (param) {
            var x = param.node;
            return {
                    id: x.id,
                    content: x.content,
                    userDisplayName: x.author.display_name,
                    userPhotoURL: x.author.photo_url,
                    timestamp: new Date(x.created_at),
                    parent: Core__Option.map(x.parent, (function (x) {
                            return x.id;
                          })),
                    translation: Core__Option.map(x.translation, (function (x) {
                            return x.name;
                          }))
                  };
          }));
  return JsxRuntime.jsx(CommentRow.make, {
              jargonID: props.jargonID,
              siblings: roots.contents
            });
}

var make = CommentSection;

export {
  CommentFragment ,
  make ,
}
/* CommentRow Not a pure module */
