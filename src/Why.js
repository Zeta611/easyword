// Generated by ReScript, PLEASE EDIT WITH CARE

import * as Core__Option from "@rescript/core/src/Core__Option.js";
import * as WhyQuery_graphql from "./__generated__/WhyQuery_graphql.js";
import * as JsxRuntime from "react/jsx-runtime";
import * as RescriptRelay_Query from "rescript-relay/src/RescriptRelay_Query.js";

var convertVariables = WhyQuery_graphql.Internal.convertVariables;

var convertResponse = WhyQuery_graphql.Internal.convertResponse;

var convertWrapRawResponse = WhyQuery_graphql.Internal.convertWrapRawResponse;

var use = RescriptRelay_Query.useQuery(convertVariables, WhyQuery_graphql.node, convertResponse);

var useLoader = RescriptRelay_Query.useLoader(convertVariables, WhyQuery_graphql.node, (function (prim) {
        return prim;
      }));

var usePreloaded = RescriptRelay_Query.usePreloaded(WhyQuery_graphql.node, convertResponse, (function (prim) {
        return prim;
      }));

var $$fetch = RescriptRelay_Query.$$fetch(WhyQuery_graphql.node, convertResponse, convertVariables);

var fetchPromised = RescriptRelay_Query.fetchPromised(WhyQuery_graphql.node, convertResponse, convertVariables);

var retain = RescriptRelay_Query.retain(WhyQuery_graphql.node, convertVariables);

var WhyQuery = {
  Operation: undefined,
  Types: undefined,
  convertVariables: convertVariables,
  convertResponse: convertResponse,
  convertWrapRawResponse: convertWrapRawResponse,
  use: use,
  useLoader: useLoader,
  usePreloaded: usePreloaded,
  $$fetch: $$fetch,
  fetchPromised: fetchPromised,
  retain: retain
};

function Why(props) {
  var match = use(undefined, undefined, undefined, undefined);
  var data = Core__Option.map(match.html_connection.edges[0], (function (edge) {
          return edge.node.data;
        }));
  if (data !== undefined) {
    return JsxRuntime.jsxs("article", {
                children: [
                  JsxRuntime.jsx("h1", {
                        children: "쉬운 전문용어"
                      }),
                  JsxRuntime.jsxs("div", {
                        children: [
                          JsxRuntime.jsx("span", {
                                children: "한국정보과학회 쉬운전문용어 제정위원회 위원장"
                              }),
                          JsxRuntime.jsx("a", {
                                children: "서울대학교 컴퓨터공학부 이광근",
                                href: "http://kwangkeunyi.snu.ac.kr"
                              })
                        ],
                        className: "flex flex-col text-right text-sm"
                      }),
                  JsxRuntime.jsx("div", {
                        className: "divider"
                      }),
                  JsxRuntime.jsx("div", {
                        dangerouslySetInnerHTML: {
                          __html: data
                        }
                      })
                ],
                className: "px-6 py-12 max-w-xl mx-auto md:max-w-4xl prose"
              });
  } else {
    return null;
  }
}

var make = Why;

export {
  WhyQuery ,
  make ,
}
/* use Not a pure module */
