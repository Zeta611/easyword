// Generated by ReScript, PLEASE EDIT WITH CARE

import * as Js_exn from "rescript/lib/es6/js_exn.js";
import * as Core__JSON from "@rescript/core/src/Core__JSON.js";
import * as Core__Option from "@rescript/core/src/Core__Option.js";
import * as Caml_js_exceptions from "rescript/lib/es6/caml_js_exceptions.js";

function retrieveOriginalID(id) {
  try {
    var decoded = Core__JSON.Decode.array(JSON.parse(atob(id)));
    if (decoded !== undefined) {
      return decoded[3];
    } else {
      return ;
    }
  }
  catch (raw_exn){
    var exn = Caml_js_exceptions.internalToOCamlException(raw_exn);
    if (exn.RE_EXN_ID === Js_exn.$$Error) {
      console.error("Error decoding ID: " + id);
      return ;
    }
    throw exn;
  }
}

function retrieveOriginalIDString(id) {
  var originalID = retrieveOriginalID(id);
  if (originalID !== undefined) {
    return Core__JSON.Decode.string(originalID);
  }
  
}

function retrieveOriginalIDInt(id) {
  var originalID = retrieveOriginalID(id);
  if (originalID !== undefined) {
    return Core__Option.map(Core__JSON.Decode.$$float(originalID), (function (n) {
                  return n | 0;
                }));
  }
  
}

export {
  retrieveOriginalID ,
  retrieveOriginalIDString ,
  retrieveOriginalIDInt ,
}
/* No side effect */
