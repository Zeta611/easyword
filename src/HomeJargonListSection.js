// Generated by ReScript, PLEASE EDIT WITH CARE

import * as React from "react";
import * as Loader from "./Loader.js";
import * as JargonList from "./JargonList.js";
import * as Caml_option from "../node_modules/rescript/lib/es6/caml_option.js";
import * as JargonRandomList from "./JargonRandomList.js";
import * as JsxRuntime from "react/jsx-runtime";
import * as RescriptRelay_Query from "../node_modules/rescript-relay/src/RescriptRelay_Query.js";
import * as HomeJargonListSectionQuery_graphql from "./__generated__/HomeJargonListSectionQuery_graphql.js";

var convertVariables = HomeJargonListSectionQuery_graphql.Internal.convertVariables;

var convertResponse = HomeJargonListSectionQuery_graphql.Internal.convertResponse;

var convertWrapRawResponse = HomeJargonListSectionQuery_graphql.Internal.convertWrapRawResponse;

var use = RescriptRelay_Query.useQuery(convertVariables, HomeJargonListSectionQuery_graphql.node, convertResponse);

var useLoader = RescriptRelay_Query.useLoader(convertVariables, HomeJargonListSectionQuery_graphql.node, (function (prim) {
        return prim;
      }));

var usePreloaded = RescriptRelay_Query.usePreloaded(HomeJargonListSectionQuery_graphql.node, convertResponse, (function (prim) {
        return prim;
      }));

var $$fetch = RescriptRelay_Query.$$fetch(HomeJargonListSectionQuery_graphql.node, convertResponse, convertVariables);

var fetchPromised = RescriptRelay_Query.fetchPromised(HomeJargonListSectionQuery_graphql.node, convertResponse, convertVariables);

var retain = RescriptRelay_Query.retain(HomeJargonListSectionQuery_graphql.node, convertVariables);

var HomeJargonListSectionQuery_comment_select_column_decode = HomeJargonListSectionQuery_graphql.Utils.comment_select_column_decode;

var HomeJargonListSectionQuery_comment_select_column_fromString = HomeJargonListSectionQuery_graphql.Utils.comment_select_column_fromString;

var HomeJargonListSectionQuery_comment_select_column_comment_aggregate_bool_exp_bool_and_arguments_columns_decode = HomeJargonListSectionQuery_graphql.Utils.comment_select_column_comment_aggregate_bool_exp_bool_and_arguments_columns_decode;

var HomeJargonListSectionQuery_comment_select_column_comment_aggregate_bool_exp_bool_and_arguments_columns_fromString = HomeJargonListSectionQuery_graphql.Utils.comment_select_column_comment_aggregate_bool_exp_bool_and_arguments_columns_fromString;

var HomeJargonListSectionQuery_comment_select_column_comment_aggregate_bool_exp_bool_or_arguments_columns_decode = HomeJargonListSectionQuery_graphql.Utils.comment_select_column_comment_aggregate_bool_exp_bool_or_arguments_columns_decode;

var HomeJargonListSectionQuery_comment_select_column_comment_aggregate_bool_exp_bool_or_arguments_columns_fromString = HomeJargonListSectionQuery_graphql.Utils.comment_select_column_comment_aggregate_bool_exp_bool_or_arguments_columns_fromString;

var HomeJargonListSectionQuery_jargon_category_select_column_decode = HomeJargonListSectionQuery_graphql.Utils.jargon_category_select_column_decode;

var HomeJargonListSectionQuery_jargon_category_select_column_fromString = HomeJargonListSectionQuery_graphql.Utils.jargon_category_select_column_fromString;

var HomeJargonListSectionQuery_jargon_select_column_decode = HomeJargonListSectionQuery_graphql.Utils.jargon_select_column_decode;

var HomeJargonListSectionQuery_jargon_select_column_fromString = HomeJargonListSectionQuery_graphql.Utils.jargon_select_column_fromString;

var HomeJargonListSectionQuery_order_by_decode = HomeJargonListSectionQuery_graphql.Utils.order_by_decode;

var HomeJargonListSectionQuery_order_by_fromString = HomeJargonListSectionQuery_graphql.Utils.order_by_fromString;

var HomeJargonListSectionQuery_translation_select_column_decode = HomeJargonListSectionQuery_graphql.Utils.translation_select_column_decode;

var HomeJargonListSectionQuery_translation_select_column_fromString = HomeJargonListSectionQuery_graphql.Utils.translation_select_column_fromString;

var HomeJargonListSectionQuery = {
  comment_select_column_decode: HomeJargonListSectionQuery_comment_select_column_decode,
  comment_select_column_fromString: HomeJargonListSectionQuery_comment_select_column_fromString,
  comment_select_column_comment_aggregate_bool_exp_bool_and_arguments_columns_decode: HomeJargonListSectionQuery_comment_select_column_comment_aggregate_bool_exp_bool_and_arguments_columns_decode,
  comment_select_column_comment_aggregate_bool_exp_bool_and_arguments_columns_fromString: HomeJargonListSectionQuery_comment_select_column_comment_aggregate_bool_exp_bool_and_arguments_columns_fromString,
  comment_select_column_comment_aggregate_bool_exp_bool_or_arguments_columns_decode: HomeJargonListSectionQuery_comment_select_column_comment_aggregate_bool_exp_bool_or_arguments_columns_decode,
  comment_select_column_comment_aggregate_bool_exp_bool_or_arguments_columns_fromString: HomeJargonListSectionQuery_comment_select_column_comment_aggregate_bool_exp_bool_or_arguments_columns_fromString,
  jargon_category_select_column_decode: HomeJargonListSectionQuery_jargon_category_select_column_decode,
  jargon_category_select_column_fromString: HomeJargonListSectionQuery_jargon_category_select_column_fromString,
  jargon_select_column_decode: HomeJargonListSectionQuery_jargon_select_column_decode,
  jargon_select_column_fromString: HomeJargonListSectionQuery_jargon_select_column_fromString,
  order_by_decode: HomeJargonListSectionQuery_order_by_decode,
  order_by_fromString: HomeJargonListSectionQuery_order_by_fromString,
  translation_select_column_decode: HomeJargonListSectionQuery_translation_select_column_decode,
  translation_select_column_fromString: HomeJargonListSectionQuery_translation_select_column_fromString,
  Operation: undefined,
  Types: undefined,
  convertVariables: convertVariables,
  convertResponse: convertResponse,
  convertWrapRawResponse: convertWrapRawResponse,
  use: use,
  useLoader: useLoader,
  usePreloaded: usePreloaded,
  $$fetch: $$fetch,
  fetchPromised: fetchPromised,
  retain: retain
};

function HomeJargonListSection(props) {
  var axis = props.axis;
  var categoryIDs = props.categoryIDs;
  var categoryCnt = props.categoryCnt;
  var searchTerm = props.searchTerm.replace(/\s+/g, "");
  var tmp;
  tmp = typeof axis !== "object" ? (
      axis === "English" ? [
          {
            name_lower: props.direction === "asc" ? "asc" : "desc"
          },
          {
            updated_at: "desc"
          }
        ] : [
          {
            updated_at: "desc"
          },
          {
            name_lower: "asc"
          }
        ]
    ) : [];
  var match = use({
        categoriesFilter: categoryCnt === categoryIDs.length ? [] : [{
              jargon_categories: {
                category_id: {
                  _in: categoryIDs
                }
              }
            }],
        directions: tmp,
        searchTerm: searchTerm
      }, undefined, undefined, undefined);
  var query = match.fragmentRefs;
  var tmp$1;
  tmp$1 = typeof axis !== "object" ? JsxRuntime.jsx(JargonList.make, {
          query: query
        }) : JsxRuntime.jsx(JargonRandomList.make, {
          seed: axis._0,
          categoryCnt: categoryCnt,
          categoryIDs: categoryIDs
        });
  return JsxRuntime.jsx(React.Suspense, {
              children: Caml_option.some(tmp$1),
              fallback: Caml_option.some(JsxRuntime.jsx("div", {
                        children: JsxRuntime.jsx(Loader.make, {}),
                        className: "h-screen grid justify-center content-center"
                      }))
            });
}

var make = HomeJargonListSection;

export {
  HomeJargonListSectionQuery ,
  make ,
}
/* use Not a pure module */
