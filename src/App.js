// Generated by ReScript, PLEASE EDIT WITH CARE

import * as React from "react";
import * as Jargon from "./Jargon.js";
import * as Js_exn from "../node_modules/rescript/lib/es6/js_exn.js";
import * as Firebase from "./Firebase.js";
import * as Reactfire from "reactfire";
import * as Auth from "firebase/auth";
import * as Caml_js_exceptions from "../node_modules/rescript/lib/es6/caml_js_exceptions.js";
import * as AppCheck from "firebase/app-check";
import * as Firestore from "firebase/firestore";
import * as RescriptReactRouter from "../node_modules/@rescript/react/src/RescriptReactRouter.js";

function App(Props) {
  var url = RescriptReactRouter.useUrl(undefined, undefined);
  var app = Reactfire.useFirebaseApp();
  var auth = Auth.getAuth(app);
  ((self.FIREBASE_APPCHECK_DEBUG_TOKEN = true));
  var appCheck = AppCheck.initializeAppCheck(app, {
        provider: new AppCheck.ReCaptchaV3Provider(Firebase.appCheckToken),
        isTokenAutoRefreshEnabled: true
      });
  var match = Reactfire.useInitFirestore(async function (app) {
        var firestore = Firestore.getFirestore(app);
        try {
          await Firestore.enableMultiTabIndexedDbPersistence(firestore);
        }
        catch (raw_err){
          var err = Caml_js_exceptions.internalToOCamlException(raw_err);
          if (err.RE_EXN_ID === Js_exn.$$Error) {
            console.log(err._1);
          } else {
            throw err;
          }
        }
        return firestore;
      });
  if (match.status === "loading") {
    return "loading...";
  }
  var match$1 = url.path;
  return React.createElement(Reactfire.AppCheckProvider, {
              sdk: appCheck,
              children: React.createElement(Reactfire.AuthProvider, {
                    sdk: auth,
                    children: match$1 ? "404" : React.createElement(Reactfire.FirestoreProvider, {
                            sdk: match.data,
                            children: React.createElement(Jargon.make, {})
                          })
                  })
            });
}

var make = App;

export {
  make ,
}
/* react Not a pure module */
