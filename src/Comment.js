// Generated by ReScript, PLEASE EDIT WITH CARE

import * as Core__List from "@rescript/core/src/Core__List.js";
import * as Core__Option from "@rescript/core/src/Core__Option.js";

function constructForest(comments) {
  var roots = {
    contents: /* [] */0
  };
  var commentNodeTable = new Map();
  comments.forEach(function (comment) {
        var node = {
          comment: comment,
          parent: undefined,
          children: /* [] */0
        };
        commentNodeTable.set(comment.id, node);
        if (Core__Option.isNone(comment.parent)) {
          roots.contents = Core__List.add(roots.contents, node);
          return ;
        }
        
      });
  commentNodeTable.forEach(function (node) {
        var parent = node.comment.parent;
        if (parent === undefined) {
          return ;
        }
        var parentNode = Core__Option.getExn(commentNodeTable.get(parent), undefined);
        parentNode.children = Core__List.add(parentNode.children, node);
        node.parent = parentNode;
      });
  return roots;
}

function countDescendents(children) {
  if (!children) {
    return 0;
  }
  var children$1 = children.hd.children;
  return (1 + countDescendents(children$1) | 0) + countDescendents(children.tl) | 0;
}

export {
  constructForest ,
  countDescendents ,
}
/* No side effect */
